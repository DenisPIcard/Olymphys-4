security:
    encoders:
        App\Entity\User:
            algorithm: auto
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    role_hierarchy:
        ROLE_COMITE: [ROLE_USER,ROLE_ADMIN] 
        ROLE_ORGACIA: [ROLE_JURYCIA, ROLE_USER, ROLE_PROF]
        ROLE_JURYCIA: [ROLE_PROF, ROLE_USER]
        ROLE_JURY: [ROLE_PROF, ROLE_USER]
        ROLE_ADMIN: [ROLE_PROF, ROLE_JURY, ROLE_COMITE, ROLE_ORGACIA]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
   
    firewalls:
       dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
       main:
            pattern:    ^/
            anonymous: true
            lazy: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            user_checker: App\Security\UserChecker 
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 2592000 # 30 days in seconds
            switch_user: true    
            logout:
                path: /logout
                target: /
            #entry_point: App\Security\AuthenticationEntryPoint

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/core/index, roles: ROLE_SUPER_ADMIN,}
         - { path: ^/public, roles : ROLE_ADMIN }
         - { path: ^/authorize, roles: IS_AUTHENTICATED_REMEMBERED }
